{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Reference",
    "description": "API reference documentation.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.botifiy.com",
      "variables": {
        "server-url": {
          "default": "api.botifiy.com",
          "description": "The URL of API server"
        }
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/instance/connectionState/{instance}": {
      "get": {
        "summary": "Connection State",
        "description": "Get the connection state of an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance to get status connect",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/instance/restart/{instance}": {
      "put": {
        "summary": "Restart Instance",
        "description": "Restart an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance to restart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/instance/logout/{instance}": {
      "delete": {
        "summary": "Logout Instance",
        "description": "Logout an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance to logout",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/instance/delete/{instance}": {
      "delete": {
        "summary": "Delete Instance",
        "description": "Delete an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/webhook/set/{instance}": {
      "post": {
        "summary": "Set Webhook",
        "description": "Set webhook configuration for an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetWebhookResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/webhook/find/{instance}": {
      "get": {
        "summary": "Find Webhook",
        "description": "Get webhook configuration for an instance",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindWebhookResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendWhatsAppAudio/{instance}": {
      "post": {
        "summary": "Send WhatsApp Audio",
        "description": "Send WhatsApp audio message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "ID of the instance to connect",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendWhatsAppAudioRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendWhatsAppAudioResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendPoll/{instance}": {
      "post": {
        "summary": "Send Poll",
        "description": "Send poll message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPollRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendPollResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendContact/{instance}": {
      "post": {
        "summary": "Send Contact",
        "description": "Send contact message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendContactResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendLocation/{instance}": {
      "post": {
        "summary": "Send Location",
        "description": "Send location message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendLocationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendLocationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendSticker/{instance}": {
      "post": {
        "summary": "Send Sticker",
        "description": "Send sticker message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendStickerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendStickerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendReaction/{instance}": {
      "post": {
        "summary": "Send Reaction",
        "description": "Send reaction message",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendReactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendReactionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendText/{instance}": {
      "post": {
        "summary": "Send Text",
        "description": "Send text message to WhatsApp number",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTextRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTextResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/message/sendMedia/{instance}": {
      "post": {
        "summary": "Send Media",
        "description": "Send media message (image, video, document, audio) to WhatsApp number",
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMediaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMediaResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ConnectionStateResponse": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "object",
            "properties": {
              "instanceName": {
                "type": "string",
                "description": "Name of the instance"
              },
              "state": {
                "type": "string",
                "description": "Connection state of the instance (e.g., 'open', 'close')"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation"
          },
          "error": {
            "type": "boolean",
            "description": "Whether an error occurred"
          },
          "response": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Response message"
              }
            }
          }
        }
      },
      "SetWebhookRequest": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "enable webhook to instance"
          },
          "url": {
            "type": "string",
            "description": "Webhook URL"
          },
          "webhookByEvents": {
            "type": "boolean",
            "description": "Enables Webhook by events"
          },
          "webhookBase64": {
            "type": "boolean",
            "description": "Sends files in base64 when available"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QRCODE_UPDATED",
                "MESSAGES_SET",
                "MESSAGES_UPSERT",
                "MESSAGES_UPDATE",
                "MESSAGES_DELETE",
                "SEND_MESSAGE",
                "CONTACTS_SET",
                "CONTACTS_UPSERT",
                "CONTACTS_UPDATE",
                "PRESENCE_UPDATE",
                "CHATS_SET",
                "CHATS_UPSERT",
                "CHATS_UPDATE",
                "CHATS_DELETE",
                "GROUPS_UPSERT",
                "GROUP_UPDATE",
                "GROUP_PARTICIPANTS_UPDATE",
                "CONNECTION_UPDATE",
                "CALL",
                "NEW_JWT_TOKEN"
              ]
            },
            "description": "Events to be sent to the Webhook"
          }
        },
        "required": ["enabled", "url", "webhookByEvents", "webhookBase64", "events"]
      },
      "SetWebhookResponse": {
        "type": "object",
        "properties": {
          "webhook": {
            "type": "object",
            "properties": {
              "instanceName": {
                "type": "string",
                "description": "Name of the instance"
              },
              "webhook": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Webhook URL"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Events configured for the webhook"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled"
                  }
                }
              }
            }
          }
        }
      },
      "FindWebhookResponse": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the webhook is enabled"
          },
          "url": {
            "type": "string",
            "description": "Webhook URL"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events configured for the webhook"
          }
        }
      },
      "SendWhatsAppAudioRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number to receive the message (with country code)"
          },
          "audio": {
            "type": "string",
            "description": "url or base64"
          },
          "delay": {
            "type": "integer",
            "description": "Presence time in milliseconds before sending message"
          },
          "linkPreview": {
            "type": "boolean",
            "description": "Shows a preview of the target website if there's a link within the message"
          },
          "mentionsEveryOne": {
            "type": "boolean",
            "description": "Mentioned everyone when the message send"
          },
          "mentioned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Numbers to mention"
          },
          "quoted": {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "conversation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": ["number", "audio"]
      },
      "SendWhatsAppAudioResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "audioMessage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "fileSha256": {
                    "type": "string"
                  },
                  "fileLength": {
                    "type": "string"
                  },
                  "seconds": {
                    "type": "integer"
                  },
                  "ptt": {
                    "type": "boolean"
                  },
                  "mediaKey": {
                    "type": "string"
                  },
                  "fileEncSha256": {
                    "type": "string"
                  },
                  "directPath": {
                    "type": "string"
                  },
                  "mediaKeyTimestamp": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendPollRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number to receive the message (with country code)"
          },
          "name": {
            "type": "string",
            "description": "Main text of the poll"
          },
          "selectableCount": {
            "type": "integer",
            "description": "Ex: 1"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Values for question"
          },
          "delay": {
            "type": "integer",
            "description": "Presence time in milliseconds before sending message"
          },
          "linkPreview": {
            "type": "boolean",
            "description": "Shows a preview of the target website if there's a link within the message"
          },
          "mentionsEveryOne": {
            "type": "boolean",
            "description": "Mentioned everyone when the message send"
          },
          "mentioned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Numbers to mention"
          },
          "quoted": {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "conversation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": ["number", "name", "selectableCount", "values"]
      },
      "SendPollResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "messageContextInfo": {
                "type": "object",
                "properties": {
                  "messageSecret": {
                    "type": "string"
                  }
                }
              },
              "pollCreationMessage": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "optionName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "selectableOptionsCount": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendContactRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number to receive the message (with country code)"
          },
          "contact": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string"
                },
                "wuid": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "description": "Contact information to send"
          }
        },
        "required": ["number", "contact"]
      },
      "SendContactResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "contactMessage": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "vcard": {
                    "type": "string"
                  },
                  "contextInfo": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendLocationRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number to receive the message (with country code)"
          },
          "name": {
            "type": "string",
            "description": "Name the city"
          },
          "address": {
            "type": "string",
            "description": "Location address"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude location"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude location"
          },
          "delay": {
            "type": "integer",
            "description": "Presence time in milliseconds before sending message"
          },
          "linkPreview": {
            "type": "boolean",
            "description": "Shows a preview of the target website if there's a link within the message"
          },
          "mentionsEveryOne": {
            "type": "boolean",
            "description": "Mentioned everyone when the message send"
          },
          "mentioned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Numbers to mention"
          },
          "quoted": {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Quoted message ID"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "conversation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": ["number", "name", "address", "latitude", "longitude"]
      },
      "SendLocationResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "locationMessage": {
                "type": "object",
                "properties": {
                  "degreesLatitude": {
                    "type": "number"
                  },
                  "degreesLongitude": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "contextInfo": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendStickerRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number to receive the message (with country code)"
          },
          "sticker": {
            "type": "string",
            "description": "url or base64"
          },
          "delay": {
            "type": "integer",
            "description": "Presence time in milliseconds before sending message"
          },
          "linkPreview": {
            "type": "boolean",
            "description": "Shows a preview of the target website if there's a link within the message"
          },
          "mentionsEveryOne": {
            "type": "boolean",
            "description": "Mentioned everyone when the message send"
          },
          "mentioned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Numbers to mention"
          },
          "quoted": {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "conversation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": ["number", "sticker"]
      },
      "SendStickerResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "stickerMessage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "fileSha256": {
                    "type": "string"
                  },
                  "fileLength": {
                    "type": "string"
                  },
                  "seconds": {
                    "type": "integer"
                  },
                  "ptt": {
                    "type": "boolean"
                  },
                  "mediaKey": {
                    "type": "string"
                  },
                  "fileEncSha256": {
                    "type": "string"
                  },
                  "directPath": {
                    "type": "string"
                  },
                  "mediaKeyTimestamp": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendReactionRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string",
                "description": "Chat contact or group remote JID"
              },
              "fromMe": {
                "type": "boolean",
                "description": "If the message was sent by the instance owner or not"
              },
              "id": {
                "type": "string",
                "description": "Message ID"
              }
            },
            "required": ["remoteJid", "fromMe", "id"]
          },
          "reaction": {
            "type": "string",
            "description": "Reaction emoji"
          }
        },
        "required": ["key", "reaction"]
      },
      "SendReactionResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": {
                "type": "string"
              },
              "fromMe": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "reactionMessage": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "object",
                    "properties": {
                      "remoteJid": {
                        "type": "string"
                      },
                      "fromMe": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "text": {
                    "type": "string"
                  },
                  "senderTimestampMs": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "messageTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendTextRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "WhatsApp number to send the message to"
          },
          "text": {
            "type": "string",
            "description": "Text message content"
          },
          "delay": {
            "type": "integer",
            "description": "Delay in milliseconds before sending the message"
          },
          "linkPreview": {
            "type": "boolean",
            "description": "Whether to show link preview"
          },
          "mentionsEveryOne": {
            "type": "boolean",
            "description": "Whether to mention everyone"
          },
          "mentioned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of mentioned JIDs"
          }
        },
        "required": ["number", "text"]
      },
      "QuotedMessage": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "id": { "type": "string" }
            }
          }
        }
      },
      "SendTextResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": { "type": "string" },
              "fromMe": { "type": "boolean" },
              "id": { "type": "string" }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "extendedTextMessage": {
                "type": "object",
                "properties": {
                  "text": { "type": "string" }
                }
              }
            }
          },
          "messageTimestamp": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "SendMediaRequest": {
        "type": "object",
        "properties": {
          "number": { "type": "string", "description": "WhatsApp number to send the message to" },
          "mediatype": { "type": "string", "description": "Type of media (image, video, document, audio)" },
          "mimetype": { "type": "string", "description": "MIME type of the media" },
          "caption": { "type": "string", "description": "Caption for the media (optional)" },
          "media": { "type": "string", "description": "Base64-encoded media content or media URL" },
          "fileName": { "type": "string", "description": "File name for the media (optional)" },
          "delay": { "type": "integer", "description": "Delay in milliseconds before sending the message (optional)" },
          "linkPreview": { "type": "boolean", "description": "Whether to show link preview (optional)" },
          "mentionsEveryOne": { "type": "boolean", "description": "Whether to mention everyone (optional)" },
          "mentioned": { "type": "array", "items": { "type": "string" }, "description": "List of mentioned JIDs (optional)" }
        },
        "required": ["number", "mediatype", "mimetype", "media"]
      },
      "SendMediaResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "remoteJid": { "type": "string" },
              "fromMe": { "type": "boolean" },
              "id": { "type": "string" }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "imageMessage": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "mimetype": { "type": "string" },
                  "caption": { "type": "string" },
                  "fileSha256": { "type": "string" },
                  "fileLength": { "type": "string" },
                  "height": { "type": "integer" },
                  "width": { "type": "integer" },
                  "mediaKey": { "type": "string" },
                  "fileEncSha256": { "type": "string" },
                  "directPath": { "type": "string" },
                  "mediaKeyTimestamp": { "type": "string" },
                  "jpegThumbnail": { "type": "string" },
                  "contextInfo": { "type": "object" }
                }
              }
            }
          },
          "messageTimestamp": { "type": "string" },
          "status": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "apikey": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey"
      }
    }
  }
}